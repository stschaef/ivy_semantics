#lang ivy1.7

type client
type server
type command = {connect,disconnect,other}

relation pending_message(X:client,Y:server,Z:command)
relation semaphore(S : server)
relation connected(S : server, C : client)
# if you take connected to be a function, it already presupposes that servers are connected to at most one client

after init {
    semaphore(S) := true;
    connected(S,C) := false;
}

action handle_connection (clientid : client, receiver : server, com : command) = {
    require pending_message(clientid, receiver, com);

    if (com = connect) {
       semaphore(receiver) := false;
       connected(receiver,  clientid) := true;
    }
    if (com = disconnect) {
       connected(receiver, clientid) := false; # how to handle ??
       semaphore(receiver) := true;
    }
    pending_message(clientid, receiver, com) := false;
}

action send_message (clientid : client, receiver : server, com : command) = {
    pending_message(clientid, receiver, com) := true;
}


invariant forall C1 , C2 : client , S : server . connected(S,C1) & connected(S,C2) -> C1 = C2
