digraph "CFG for '_ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_' function" {
	label="CFG for '_ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_' function";

	Node0x60000255b980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{entry:\l  %retval = alloca %\"class.std::__1::__tree_node_base\"*, align 8\l  %__x.addr = alloca %\"class.std::__1::__tree_node_base\"*, align 8\l  store %\"class.std::__1::__tree_node_base\"* %__x,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  %0 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  %__right_ = getelementptr inbounds %\"class.std::__1::__tree_node_base\",\l... %\"class.std::__1::__tree_node_base\"* %0, i32 0, i32 1\l  %1 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__right_, align 8\l  %cmp = icmp ne %\"class.std::__1::__tree_node_base\"* %1, null\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x60000255b980:s0 -> Node0x60000255b9c0;
	Node0x60000255b980:s1 -> Node0x60000255ba00;
	Node0x60000255b9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{if.then:                                          \l  %2 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  %__right_1 = getelementptr inbounds %\"class.std::__1::__tree_node_base\",\l... %\"class.std::__1::__tree_node_base\"* %2, i32 0, i32 1\l  %3 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__right_1, align 8\l  %call = call noundef %\"class.std::__1::__tree_node_base\"*\l... @_ZNSt3__1L10__tree_minIPNS_16__tree_node_baseIPvEEEET_S5_(%\"class.std::__1::_\l..._tree_node_base\"* noundef %3) #8\l  store %\"class.std::__1::__tree_node_base\"* %call,\l... %\"class.std::__1::__tree_node_base\"** %retval, align 8\l  br label %return\l}"];
	Node0x60000255b9c0 -> Node0x60000255ba40;
	Node0x60000255ba00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x60000255ba00 -> Node0x60000255bac0;
	Node0x60000255bac0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.cond:                                       \l  %4 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  %call2 = call noundef zeroext i1\l... @_ZNSt3__1L20__tree_is_left_childIPNS_16__tree_node_baseIPvEEEEbT_(%\"class.std\l...::__1::__tree_node_base\"* noundef %4) #8\l  %lnot = xor i1 %call2, true\l  br i1 %lnot, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x60000255bac0:s0 -> Node0x60000255bb80;
	Node0x60000255bac0:s1 -> Node0x60000255bbc0;
	Node0x60000255bb80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{while.body:                                       \l  %5 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  %call3 = call noundef %\"class.std::__1::__tree_node_base\"*\l... @_ZNKSt3__116__tree_node_baseIPvE15__parent_unsafeEv(%\"class.std::__1::__tree_\l...node_base\"* noundef nonnull align 8 dereferenceable(25) %5)\l  store %\"class.std::__1::__tree_node_base\"* %call3,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  br label %while.cond, !llvm.loop !10\l}"];
	Node0x60000255bb80 -> Node0x60000255bac0;
	Node0x60000255bbc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{while.end:                                        \l  %6 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %__x.addr, align 8\l  %call4 = call noundef %\"class.std::__1::__tree_node_base\"*\l... @_ZNKSt3__116__tree_node_baseIPvE15__parent_unsafeEv(%\"class.std::__1::__tree_\l...node_base\"* noundef nonnull align 8 dereferenceable(25) %6)\l  store %\"class.std::__1::__tree_node_base\"* %call4,\l... %\"class.std::__1::__tree_node_base\"** %retval, align 8\l  br label %return\l}"];
	Node0x60000255bbc0 -> Node0x60000255ba40;
	Node0x60000255ba40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{return:                                           \l  %7 = load %\"class.std::__1::__tree_node_base\"*,\l... %\"class.std::__1::__tree_node_base\"** %retval, align 8\l  ret %\"class.std::__1::__tree_node_base\"* %7\l}"];
}
