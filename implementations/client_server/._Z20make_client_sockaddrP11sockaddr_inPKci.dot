digraph "CFG for '_Z20make_client_sockaddrP11sockaddr_inPKci' function" {
	label="CFG for '_Z20make_client_sockaddrP11sockaddr_inPKci' function";

	Node0x600003e78980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %retval = alloca i32, align 4\l  %addr.addr = alloca %struct.sockaddr_in*, align 8\l  %hostname.addr = alloca i8*, align 8\l  %port.addr = alloca i32, align 4\l  %host = alloca %struct.hostent*, align 8\l  store %struct.sockaddr_in* %addr, %struct.sockaddr_in** %addr.addr, align 8\l  store i8* %hostname, i8** %hostname.addr, align 8\l  store i32 %port, i32* %port.addr, align 4\l  %0 = load %struct.sockaddr_in*, %struct.sockaddr_in** %addr.addr, align 8\l  %sin_family = getelementptr inbounds %struct.sockaddr_in,\l... %struct.sockaddr_in* %0, i32 0, i32 1\l  store i8 2, i8* %sin_family, align 1\l  %1 = load i8*, i8** %hostname.addr, align 8\l  %call = call %struct.hostent* @gethostbyname(i8* noundef %1)\l  store %struct.hostent* %call, %struct.hostent** %host, align 8\l  %2 = load %struct.hostent*, %struct.hostent** %host, align 8\l  %cmp = icmp eq %struct.hostent* %2, null\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x600003e78980:s0 -> Node0x600003e78a00;
	Node0x600003e78980:s1 -> Node0x600003e78a40;
	Node0x600003e78a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{if.then:                                          \l  %3 = load %struct.__sFILE*, %struct.__sFILE** @__stderrp, align 8\l  %4 = load i8*, i8** %hostname.addr, align 8\l  %call1 = call i32 (%struct.__sFILE*, i8*, ...) @fprintf(%struct.__sFILE*\l... noundef %3, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str,\l... i64 0, i64 0), i8* noundef %4)\l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x600003e78a00 -> Node0x600003e78b00;
	Node0x600003e78a40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{if.end:                                           \l  %5 = load %struct.sockaddr_in*, %struct.sockaddr_in** %addr.addr, align 8\l  %sin_addr = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in*\l... %5, i32 0, i32 3\l  %6 = bitcast %struct.in_addr* %sin_addr to i8*\l  %7 = load %struct.hostent*, %struct.hostent** %host, align 8\l  %h_addr_list = getelementptr inbounds %struct.hostent, %struct.hostent* %7,\l... i32 0, i32 4\l  %8 = load i8**, i8*** %h_addr_list, align 8\l  %arrayidx = getelementptr inbounds i8*, i8** %8, i64 0\l  %9 = load i8*, i8** %arrayidx, align 8\l  %10 = load %struct.hostent*, %struct.hostent** %host, align 8\l  %h_length = getelementptr inbounds %struct.hostent, %struct.hostent* %10,\l... i32 0, i32 3\l  %11 = load i32, i32* %h_length, align 4\l  %conv = sext i32 %11 to i64\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 1 %9, i64\l... %conv, i1 false)\l  %12 = load i32, i32* %port.addr, align 4\l  %13 = call i1 @llvm.is.constant.i32(i32 %12)\l  br i1 %13, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x600003e78a40:s0 -> Node0x600003e78c00;
	Node0x600003e78a40:s1 -> Node0x600003e78c40;
	Node0x600003e78c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{cond.true:                                        \l  %14 = load i32, i32* %port.addr, align 4\l  %conv2 = trunc i32 %14 to i16\l  %conv3 = zext i16 %conv2 to i32\l  %and = and i32 %conv3, 65280\l  %shr = lshr i32 %and, 8\l  %15 = load i32, i32* %port.addr, align 4\l  %conv4 = trunc i32 %15 to i16\l  %conv5 = zext i16 %conv4 to i32\l  %and6 = and i32 %conv5, 255\l  %shl = shl i32 %and6, 8\l  %or = or i32 %shr, %shl\l  %conv7 = trunc i32 %or to i16\l  br label %cond.end\l}"];
	Node0x600003e78c00 -> Node0x600003e78c80;
	Node0x600003e78c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{cond.false:                                       \l  %16 = load i32, i32* %port.addr, align 4\l  %conv8 = trunc i32 %16 to i16\l  %call9 = call noundef zeroext i16 @_ZL12_OSSwapInt16t(i16 noundef zeroext\l... %conv8)\l  br label %cond.end\l}"];
	Node0x600003e78c40 -> Node0x600003e78c80;
	Node0x600003e78c80 [shape=record,color="#b70d28ff", style=filled, fillcolor="#e36c5570",label="{cond.end:                                         \l  %cond = phi i16 [ %conv7, %cond.true ], [ %call9, %cond.false ]\l  %17 = load %struct.sockaddr_in*, %struct.sockaddr_in** %addr.addr, align 8\l  %sin_port = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in*\l... %17, i32 0, i32 2\l  store i16 %cond, i16* %sin_port, align 2\l  store i32 0, i32* %retval, align 4\l  br label %return\l}"];
	Node0x600003e78c80 -> Node0x600003e78b00;
	Node0x600003e78b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{return:                                           \l  %18 = load i32, i32* %retval, align 4\l  ret i32 %18\l}"];
}
