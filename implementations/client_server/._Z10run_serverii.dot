digraph "CFG for '_Z10run_serverii' function" {
	label="CFG for '_Z10run_serverii' function";

	Node0x6000031f4b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{entry:\l  %retval = alloca i32, align 4\l  %port.addr = alloca i32, align 4\l  %queue_size.addr = alloca i32, align 4\l  %sockfd = alloca i32, align 4\l  %yesval = alloca i32, align 4\l  %addr = alloca %struct.sockaddr_in, align 4\l  %connectionfd = alloca i32, align 4\l  store i32 %port, i32* %port.addr, align 4\l  store i32 %queue_size, i32* %queue_size.addr, align 4\l  %call = call i32 @socket(i32 noundef 2, i32 noundef 1, i32 noundef 0)\l  store i32 %call, i32* %sockfd, align 4\l  %0 = load i32, i32* %sockfd, align 4\l  %cmp = icmp eq i32 %0, -1\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x6000031f4b40:s0 -> Node0x6000031f4bc0;
	Node0x6000031f4b40:s1 -> Node0x6000031f4c00;
	Node0x6000031f4bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.then:                                          \l  call void @perror(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]*\l... @.str.16, i64 0, i64 0)) #8\l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x6000031f4bc0 -> Node0x6000031f4c80;
	Node0x6000031f4c00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.end:                                           \l  store i32 1, i32* %yesval, align 4\l  %1 = load i32, i32* %sockfd, align 4\l  %2 = bitcast i32* %yesval to i8*\l  %call1 = call i32 @setsockopt(i32 noundef %1, i32 noundef 65535, i32 noundef\l... 4, i8* noundef %2, i32 noundef 4)\l  %cmp2 = icmp eq i32 %call1, -1\l  br i1 %cmp2, label %if.then3, label %if.end4\l|{<s0>T|<s1>F}}"];
	Node0x6000031f4c00:s0 -> Node0x6000031f4d00;
	Node0x6000031f4c00:s1 -> Node0x6000031f4d40;
	Node0x6000031f4d00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{if.then3:                                         \l  call void @perror(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]*\l... @.str.17, i64 0, i64 0)) #8\l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x6000031f4d00 -> Node0x6000031f4c80;
	Node0x6000031f4d40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{if.end4:                                          \l  %3 = load i32, i32* %port.addr, align 4\l  %call5 = call noundef i32\l... @_Z20make_server_sockaddrP11sockaddr_ini(%struct.sockaddr_in* noundef %addr,\l... i32 noundef %3)\l  %cmp6 = icmp eq i32 %call5, -1\l  br i1 %cmp6, label %if.then7, label %if.end8\l|{<s0>T|<s1>F}}"];
	Node0x6000031f4d40:s0 -> Node0x6000031f4e00;
	Node0x6000031f4d40:s1 -> Node0x6000031f4e40;
	Node0x6000031f4e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{if.then7:                                         \l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x6000031f4e00 -> Node0x6000031f4c80;
	Node0x6000031f4e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.end8:                                          \l  %4 = load i32, i32* %sockfd, align 4\l  %5 = bitcast %struct.sockaddr_in* %addr to %struct.sockaddr*\l  %call9 = call i32 @\"\\01_bind\"(i32 noundef %4, %struct.sockaddr* noundef %5,\l... i32 noundef 16)\l  %cmp10 = icmp eq i32 %call9, -1\l  br i1 %cmp10, label %if.then11, label %if.end12\l|{<s0>T|<s1>F}}"];
	Node0x6000031f4e40:s0 -> Node0x6000031f4f00;
	Node0x6000031f4e40:s1 -> Node0x6000031f4f40;
	Node0x6000031f4f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then11:                                        \l  call void @perror(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]*\l... @.str.18, i64 0, i64 0)) #8\l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x6000031f4f00 -> Node0x6000031f4c80;
	Node0x6000031f4f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{if.end12:                                         \l  %6 = load i32, i32* %sockfd, align 4\l  %call13 = call noundef i32 @_Z15get_port_numberi(i32 noundef %6)\l  store i32 %call13, i32* %port.addr, align 4\l  %7 = load i32, i32* %port.addr, align 4\l  %call14 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds\l... ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 noundef %7)\l  %8 = load i32, i32* %sockfd, align 4\l  %9 = load i32, i32* %queue_size.addr, align 4\l  %call15 = call i32 @\"\\01_listen\"(i32 noundef %8, i32 noundef %9)\l  br label %while.body\l}"];
	Node0x6000031f4f40 -> Node0x6000031f5040;
	Node0x6000031f5040 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{while.body:                                       \l  %10 = load i32, i32* %sockfd, align 4\l  %call16 = call i32 @\"\\01_accept\"(i32 noundef %10, %struct.sockaddr* noundef\l... null, i32* noundef null)\l  store i32 %call16, i32* %connectionfd, align 4\l  %11 = load i32, i32* %connectionfd, align 4\l  %cmp17 = icmp eq i32 %11, -1\l  br i1 %cmp17, label %if.then18, label %if.end19\l|{<s0>T|<s1>F}}"];
	Node0x6000031f5040:s0 -> Node0x6000031f50c0;
	Node0x6000031f5040:s1 -> Node0x6000031f5100;
	Node0x6000031f50c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{if.then18:                                        \l  call void @perror(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]*\l... @.str.20, i64 0, i64 0)) #8\l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x6000031f50c0 -> Node0x6000031f4c80;
	Node0x6000031f5100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end19:                                         \l  %12 = load i32, i32* %connectionfd, align 4\l  %call20 = call noundef i32 @_Z17handle_connectioni(i32 noundef %12)\l  %cmp21 = icmp eq i32 %call20, -1\l  br i1 %cmp21, label %if.then22, label %if.end23\l|{<s0>T|<s1>F}}"];
	Node0x6000031f5100:s0 -> Node0x6000031f51c0;
	Node0x6000031f5100:s1 -> Node0x6000031f5200;
	Node0x6000031f51c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{if.then22:                                        \l  store i32 -1, i32* %retval, align 4\l  br label %return\l}"];
	Node0x6000031f51c0 -> Node0x6000031f4c80;
	Node0x6000031f5200 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end23:                                         \l  br label %while.body, !llvm.loop !10\l}"];
	Node0x6000031f5200 -> Node0x6000031f5040;
	Node0x6000031f4c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{return:                                           \l  %13 = load i32, i32* %retval, align 4\l  ret i32 %13\l}"];
}
