digraph "CFG for '_ZNSt3__1L20__throw_length_errorEPKc' function" {
	label="CFG for '_ZNSt3__1L20__throw_length_errorEPKc' function";

	Node0x60000255d680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %__msg.addr = alloca i8*, align 8\l  %exn.slot = alloca i8*, align 8\l  %ehselector.slot = alloca i32, align 4\l  store i8* %__msg, i8** %__msg.addr, align 8\l  %exception = call i8* @__cxa_allocate_exception(i64 16) #8\l  %0 = bitcast i8* %exception to %\"class.std::length_error\"*\l  %1 = load i8*, i8** %__msg.addr, align 8\l  %call = invoke noundef %\"class.std::length_error\"*\l... @_ZNSt12length_errorC1EPKc(%\"class.std::length_error\"* noundef nonnull align\l... 8 dereferenceable(16) %0, i8* noundef %1)\l          to label %invoke.cont unwind label %lpad\l}"];
	Node0x60000255d680 -> Node0x60000255d700;
	Node0x60000255d680 -> Node0x60000255d740;
	Node0x60000255d700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{invoke.cont:                                      \l  call void @__cxa_throw(i8* %exception, i8* bitcast (i8**\l... @_ZTISt12length_error to i8*), i8* bitcast (%\"class.std::length_error\"*\l... (%\"class.std::length_error\"*)* @_ZNSt12length_errorD1Ev to i8*)) #17\l  unreachable\l}"];
	Node0x60000255d740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{lpad:                                             \l  %2 = landingpad \{ i8*, i32 \}\l          cleanup\l  %3 = extractvalue \{ i8*, i32 \} %2, 0\l  store i8* %3, i8** %exn.slot, align 8\l  %4 = extractvalue \{ i8*, i32 \} %2, 1\l  store i32 %4, i32* %ehselector.slot, align 4\l  call void @__cxa_free_exception(i8* %exception) #8\l  br label %eh.resume\l}"];
	Node0x60000255d740 -> Node0x60000255d940;
	Node0x60000255d940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{eh.resume:                                        \l  %exn = load i8*, i8** %exn.slot, align 8\l  %sel = load i32, i32* %ehselector.slot, align 4\l  %lpad.val = insertvalue \{ i8*, i32 \} undef, i8* %exn, 0\l  %lpad.val1 = insertvalue \{ i8*, i32 \} %lpad.val, i32 %sel, 1\l  resume \{ i8*, i32 \} %lpad.val1\l}"];
}
